# The Daemon section describes identification information which can be queried from the MD.
daemon:
  name: Development Astron Cluster

# The General section contains config settings that are shared among daemons in the cluster.
general:
  eventlogger: 127.0.0.1:7197
  dc_files:
    - simple_example.dc

# The UberDOGs section describes the existence of Distributed Object Globals.
uberdogs:
  - id: 1001
    class: LoginManager
    anonymous: true # Default: false

# Configuration for the Message Director
messagedirector:
  bind: 127.0.0.1:7199

# The 'Roles' section allows specifying roles that we would like this daemon to perform.
roles:
  - type: clientagent
    bind: 127.0.0.1:7198
    # Manual_dc_hash tells the server what DC hash version to expect from the client.
    #     This is mostly used if the DC parser used by the client doesn't have hash parity
    #     with the parser used by Astron. (Panda3D users will currently need to enable this).
    #manual_dc_hash: 0xABCD1234
    version: "development"

    client:
      type: libastron # Default client implementation: libastron
      relocate: false # Default: false
    channels:
      min: 1000000000
      max: 1009999999

  - type: stateserver
    control: 4002

  - type: database
    control: 4003
    generate:
      min: 100000000 # Required (no default)
      max: 399999999 # Default: DOID_T_MAX (UINT_MAX)
    backend:
      type: yaml

  - type: dbss
    database: 4003
    ranges:
      - min: 100000000
        max: 399999999

  - type: eventlogger
    bind: 127.0.0.1:7197 # REMEMBER: UDP
    output: ./logs/el-%Y-%m-%d-%H-%M-%S.log # This is a time format.
    rotate_interval: 1d # Rotate the logs daily.
